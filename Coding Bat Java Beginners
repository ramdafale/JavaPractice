Given a non-empty string and an int n, return a new string where the char at index n has been removed. The value of n will be a valid index of a char in the original string (i.e. n will be in the range 0..str.length()-1 inclusive).


missingChar("kitten", 1) → "ktten"
missingChar("kitten", 0) → "itten"
missingChar("kitten", 4) → "kittn"

---------------------
Solution 

public String missingChar(String str, int n) {
  
  StringBuilder build = new StringBuilder(str);

    build.deleteCharAt(n);  // Shift the positions front.
   return  build.toString();
}
--------------------------------
 merge two array and sort them in java
 
 SOlution:
class Merge2ArrayAndSort
{

       static void sortedArray(int[] arr1, int[] arr2,
                               int n, int m, int[] res)
       {

               int i=0;
               int j=0;
               int k=0;
        while(i<n && j<m)
        {
                if(arr1[i]<arr2[j])
                {
                        res[k++]= arr1[i++];
                        //i++; k++;
                }
                else
                {
                        res[k++]= arr2[j++];
                       // j++; k++;
                }


        }
        //for remaining elemnts of array
               while(i< n)
               {
                       res[k]= arr1[i];
                       i++; k++;
               }
               while(j< m)
               {
                       res[k]= arr2[j];
                       j++; k++;
               }
       }

public static void main(String  args[]) {

        int arr1[] = {1,3,5,7,9};
        int arr2[] = {1,4,8,10,11,12,16};
        //length of each array
        int n = arr1.length;
        int m = arr2.length;

        // new sorted array
        int res[] = new int[n+m];
        sortedArray(arr1,
                arr2,
                n,
                m,
                res);
        System.out.print( "Sorted merged list :");
       for (int i = 0; i < n + m; i++)
                System.out.print(" " + res[i]);
}
}
--------------------------------------------------------------------------------------------

Problem :  program to remove duplicate from sorted Array Using Temporary array


Solution : 

class sortedArrayUsingTemporaryArrayClass
{

       static void sortedArrayUsingTemporaryArray(int[] arr1, int res[],
                               int n) {
           int j = 0;
          for( int i=0;i<n-1;i++) {
               if (arr1[i] != arr1[i+1]) {
                   res[j] = arr1[i];
                   j++;
               }
                res[j]=arr1[n-1];
               }
           }

public static void main(String  args[]) {

        int arr1[] = {1,2,2,3,4,4,5,7};

        int n = arr1.length;

        // new sorted array
        int res[] = new int[n];
    sortedArrayUsingTemporaryArray(arr1, res,n);

        System.out.print( "Sorted merged list :");
       for (int i = 0; i < n ; i++)
                System.out.print(" " + res[i]);
}
}
